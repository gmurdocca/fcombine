diff -uNrp curlftpfs-0.9.2.orig/ftpfs.c curlftpfs-0.9.2.new/ftpfs.c
--- curlftpfs-0.9.2.orig/ftpfs.c	2008-04-30 09:05:47.000000000 +1000
+++ curlftpfs-0.9.2.new/ftpfs.c	2010-03-05 21:12:46.000000000 +1100
@@ -174,6 +174,8 @@ static struct fuse_opt ftpfs_opts[] = {
   FTPFS_OPT("codepage=%s",        codepage, 0),
   FTPFS_OPT("iocharset=%s",       iocharset, 0),
   FTPFS_OPT("nomulticonn",        multiconn, 0),
+  FTPFS_OPT("timeout=%u",         timeout, 0),
+  FTPFS_OPT("ftp_timeout=%u",     ftp_timeout, 0),
 
   FUSE_OPT_KEY("-h",             KEY_HELP),
   FUSE_OPT_KEY("--help",         KEY_HELP),
@@ -285,6 +287,7 @@ static int ftpfs_getdir(const char* path
 
 static int ftpfs_getattr(const char* path, struct stat* sbuf) {
   int err;
+  int io_err;
   CURLcode curl_res;
   char* dir_path = get_dir_path(path);
 
@@ -301,6 +304,10 @@ static int ftpfs_getattr(const char* pat
 
   if (curl_res != 0) {
     DEBUG(1, "%s\n", error_buf);
+    io_err = 1;
+  }
+  else {
+    io_err = 0;
   }
   buf_null_terminate(&buf);
 
@@ -312,6 +319,7 @@ static int ftpfs_getattr(const char* pat
   free(dir_path);
   buf_free(&buf);
   if (err) return op_return(-ENOENT, "ftpfs_getattr");
+  if (io_err) return -EIO;
   return 0;
 }
 
@@ -1494,6 +1502,8 @@ static void usage(const char* progname) 
 "    utf8                try to transfer file list with utf-8 encoding\n"
 "    codepage=STR        set the codepage the server uses\n"
 "    iocharset=STR       set the charset used by the client\n"
+"    timeout=N           set timeout in seconds for transfer operations\n"
+"    ftp_timeout=N       set timeout in seconds for server responses\n"
 "\n"
 "CurlFtpFS cache options:  \n"
 "    cache=yes|no              enable/disable cache (default: yes)\n"
@@ -1662,6 +1672,14 @@ static void set_common_curl_stuff(CURL* 
   curl_easy_setopt_or_die(easy, CURLOPT_PROXYUSERPWD, ftpfs.proxy_user);
   curl_easy_setopt_or_die(easy, CURLOPT_SSLVERSION, ftpfs.ssl_version);
   curl_easy_setopt_or_die(easy, CURLOPT_IPRESOLVE, ftpfs.ip_version);
+
+  // Set timeouts
+  if (ftpfs.timeout) {
+    curl_easy_setopt_or_die(easy, CURLOPT_TIMEOUT, ftpfs.timeout);
+  }
+  if (ftpfs.ftp_timeout) {
+    curl_easy_setopt_or_die(easy, CURLOPT_FTP_RESPONSE_TIMEOUT, ftpfs.ftp_timeout);
+  }
 }
 
 static void checkpasswd(const char *kind, /* for what purpose */
diff -uNrp curlftpfs-0.9.2.orig/ftpfs.h curlftpfs-0.9.2.new/ftpfs.h
--- curlftpfs-0.9.2.orig/ftpfs.h	2008-04-25 20:32:30.000000000 +1000
+++ curlftpfs-0.9.2.new/ftpfs.h	2010-03-05 19:55:06.000000000 +1100
@@ -67,6 +67,8 @@ struct ftpfs {
   char *codepage;
   char *iocharset;
   int multiconn;
+  int timeout;
+  int ftp_timeout;
 };
 
 extern struct ftpfs ftpfs;
